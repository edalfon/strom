---
title: "Correlations"
execute:
  echo: false
  eval: true
---

```{python}
#| include: false
%load_ext sql
#%sql --section duck

import epyfun
import pandas as pd
import strom
strom_climate = strom.read_result("merge_strom_climate_data")
```

```{python}
# TT_TU	Lufttemperatur	°C
# TT_STD	Lufttemperatur in 2m Hoehe	°C
# TT	Temperatur der Luft in 2m Hoehe	°C

# RF_TU	relative Feuchte	%
# RF_STD	Stundenwerte der Relativen Feuchte	%

# ABSF_STD	berechnete Stundenwerte der absoluten Feuchte	g/m³
# P_STD	Stundenwerte Luftdruck	hpa
# TD_STD	Taupunkttemperatur in 2m Hoehe	°C
# TF_STD	berechnete Stundenwerte der Feuchttemperatur	°C
# VP_STD	berechnete Stundenwerte des Dampfdruckes	hpa
# TD	Taupunktstemperatur	°C

# fmt: off
all_columns = [
    "nd", "wd", "obs", 

    #"tt_tu_min", "tt_tu_mean", "tt_tu_max",
    #'tt_std_min', 'tt_std_mean', 'tt_std_max',
    'tt_min', 'tt_mean', 'tt_max',

    "rf_tu_min", "rf_tu_mean", "rf_tu_max",
    #'rf_std_min', 'rf_std_mean', 'rf_std_max',

    'td_min', 'td_mean', 'td_max',

    'vp_std_min', 'vp_std_mean', 'vp_std_max',

    'tf_std_min', 'tf_std_mean', 'tf_std_max',

    'p_std_min', 'p_std_mean', 'p_std_max',

    'td_std_min', 'td_std_mean', 'td_std_max',

    "r1_min", "r1_mean", "r1_max",
    #'rs_ind_min', 'rs_ind_mean', 'rs_ind_max', 
    # 'wrtr_min', 'wrtr_mean', 'wrtr_max'
]
# fmt: on
```

# Mean values of climate variables

```{python}
selected_columns = ["wd", "nd", "obs"] + [
    col for col in all_columns if col.endswith("_mean")
]
```

```{python}
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

selected_df = strom_climate[selected_columns]
correlation_matrix = selected_df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Correlation Matrix Plot")
plt.show()
```


```{python}
import pandas as pd
import matplotlib.pyplot as plt
from pandas.plotting import scatter_matrix

selected_df = strom_climate[selected_columns]
scatter_matrix(selected_df, alpha=0.8, figsize=(10, 8), diagonal="hist")
plt.suptitle("Scatter Plot Matrix", y=1.02)
plt.show()
```


```{python}
fig = epyfun.splom(strom_climate, selected_columns, height=700)
fig
```

# Min values of climate variables

```{python}
selected_columns = ["wd", "nd", "obs"] + [
    col for col in all_columns if col.endswith("_min")
]
```

```{python}
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

selected_df = strom_climate[selected_columns]
correlation_matrix = selected_df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Correlation Matrix Plot")
plt.show()
```

```{python}
import pandas as pd
import matplotlib.pyplot as plt
from pandas.plotting import scatter_matrix

selected_df = strom_climate[selected_columns]
scatter_matrix(selected_df, alpha=0.8, figsize=(10, 8), diagonal="hist")
plt.suptitle("Scatter Plot Matrix", y=1.02)
plt.show()
```

```{python}
fig = epyfun.splom(strom_climate, selected_columns, height=700)
fig
```

# Max values of climate variables

```{python}
selected_columns = ["wd", "nd", "obs"] + [
    col for col in all_columns if col.endswith("_max")
]
```

```{python}
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

selected_df = strom_climate[selected_columns]
correlation_matrix = selected_df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Correlation Matrix Plot")
plt.show()
```

```{python}
import pandas as pd
import matplotlib.pyplot as plt
from pandas.plotting import scatter_matrix

selected_df = strom_climate[selected_columns]
scatter_matrix(selected_df, alpha=0.8, figsize=(10, 8), diagonal="hist")
plt.suptitle("Scatter Plot Matrix", y=1.02)
plt.show()
```

```{python}
fig = epyfun.splom(strom_climate, selected_columns, height=700)
fig
```

some first-look insights

- it's good that the correlation between normal and warme strom consumption is very low. It is expected, and could be useful to use normal strom utilization as a proxy for other things (i.e. being at home basically)
- also as expected, the correlation between normal strom utilization and temprature is low.
- there is a nice and strong negative correlation between temperature and wärmestrom consumption. It is not strictly linear though. Rather polinomial (inverse) relatioship.
- there seems to be some sort of weak positive correlation between wärmestrom and relative humidity. Not at all consistent though. It is positive with min and mean humidity, but negative or non-existent with max humidity. It may well be just an artifact or spurious correlation, explained by temperature, because there is indeed a correlation (not that strong, though) between temperature and humidity.
- the number of observations are somewhat related to the temperature, which kinda makes sense, because the measurements are not random. I am much more likely to measure the thing when it's cold!, and that seems to be reflected in the data.


